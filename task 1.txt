// Tasks

// 1. List all the products with above average price.
// 2. List top 5 products with highest rating.
// 3. List all distinct categories.
// 4. Print average price and rating of the products
// 5. List top 5 products with highest rating and lowest price.

// Big challenge :)

// 6. Create list with User's Name, Email, City and their product's names, prices and total bill.



task 2
const {articles} = require('../data/others/news.json')
// Tasks

// 1. Name all the sources with null ids.
// 2. Name all the sources with null authors.
// 3. Create a new list with any of the keys that have null values.
// 4. Print the title, content and description of the latest article.
    // let latest = articles
    //                     .map(n => n.publishedAt)
    //                     .sort((a, b) => b - a)[0]
    // articles
    //     .filter(n => n.publishedAt === latest)
    //     .forEach(n => {
    //                 console.log(`Title: ${n.title}`)
    //                 console.log(`Content: ${n.content}`)
    //                 console.log(`Description: ${n.description}`)
    //             });
// 5. Print the title, content and description of the oldest article.
// 6. Print the article with the longest title.
// 7. Print all the articles from the same source.



Task 3
const products = require('../data/others/products.json')
// Tasks

// 1. Create a function that returns the name of the product with the highest name length.
//    If there are two or more products with the same length, return the one with the lowest id.

// 2. Create a function that returns the name of the product with the highest price.
//    If there are two or more products with the same price, return the one with the lowest id.

// 3. Create a list of all the products that are from the same brand.

// 4. Print the average price of the products.

// 5. Create a list of all the products that have highest stock units.


Task 4
const todos = require('../data/others/todos.json')

// 1. Write a function that takes an array of todo objects and returns an array of the todo titles
//   (i.e. the `title` property of each todo object).
//  The returned array should be sorted alphabetically.

// 2. Write a function that takes an array of todo objects and returns an array of the todo titles for incomplete tasks
//  (i.e. the `title` property of each todo object that has a `completed` property set to `false`).
//  The returned array should be sorted alphabetically.

// 3. Write a function that takes an array of todo objects and returns an array of the todo titles for complete tasks
// (i.e. the `title` property of each todo object that has a `completed` property set to `true`).
//  The returned array should be sorted alphabetically.

Task 5
const users = require('../data/others/users.json')

// 1. Create a function that returns the name of the user with the highest name length.
//    If there are two or more users with the same length, return the one with the lowest id.

// 2. Create a function that returns the name of the user with the shortest name.
//    If there are two or more users with the same length, return the one with the lowest id.

// 3. Create a function that returns the name of the user with the highest id.

// 4. Create a function that returns the name of the user with the lowest id.

// 7. Create a function that returns the name, email and address along with lat, long of the user.

// 8. Create a function that checks if there are any user from the same city.

// 9. Create a function to check if there is any invalid email in the users list. (use regex)


